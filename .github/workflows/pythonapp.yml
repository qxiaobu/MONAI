name: build

on:
  # quick tests for every pull request
  push:
    branches:
      - master
  pull_request:

jobs:
  flake8-py3:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        pip install flake8==3.7.9 flake8-mypy flake8-bugbear flake8-comprehensions flake8-executable flake8-pyi mccabe pycodestyle pyflakes
        pip install pep8-naming
        flake8 --version
        python -c 'import monai; monai.config.print_config()'
        flake8 . --count --statistics

  quick-py3:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macOS-latest, ubuntu-latest]
    timeout-minutes: 20
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.x
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - if: runner.os == 'windows'
      name: Install torch cpu from pytorch.org (Windows only)
      run: |
        python -m pip install --upgrade pip
        python -m pip install torch -f https://download.pytorch.org/whl/cpu/torch_stable.html -q
    - name: Install the dependencies
      run: |
        which python
        python -m pip install --upgrade pip
        python -m pip install -q -r requirements.txt
    - name: Run quick tests (CPU ${{ runner.os }})
      run: |
        python -m pip list
        python -m unittest -v
      env:
        QUICKTEST: True

  GPU-quick-py3:
    container:
      image: nvcr.io/nvidia/pytorch:20.03-py3
      options: --gpus all
    runs-on: [self-hosted, linux, x64]
    steps:
    - uses: actions/checkout@v2
    - name: Install the dependencies
      run: |
        which python
        python -m pip install --upgrade pip --no-cache-dir
        python -m pip install -q -r requirements.txt --no-cache-dir
    - name: Run quick tests (GPU)
      run: |
        python -m pip list
        pwd
        ls -a
        nvidia-smi
        export CUDA_DEVICE_ORDER=PCI_BUS_ID
        export CUDA_VISIBLE_DEVICES=0,1
        python -c "import torch; print('{} of GPUs available'.format(torch.cuda.device_count()))"
        ./runtests.sh --quick
        pip list
        coverage xml
    - name: Upload coverage
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml

  packaging:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Set up Python 3.x
      uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - name: Install setuptools
      run: |
        python -m pip install --user --upgrade setuptools wheel twine
    - name: Test source archive and wheel file
      run: |
        git fetch --depth=1 origin +refs/tags/*:refs/tags/*
        root_dir=$PWD
        echo "$root_dir"
        set -e

        # build tar.gz and wheel
        python setup.py check -m -s
        python setup.py sdist bdist_wheel
        python -m twine check dist/*

        # move packages to a temp dir
        tmp_dir=$(mktemp -d)
        cp dist/monai* "$tmp_dir"
        rm -r build dist monai.egg-info
        cd "$tmp_dir"
        ls -al

        # install from wheel
        python -m pip install monai*.whl
        python -c 'import monai; monai.config.print_config()' 2>&1 | grep -iv "unknown"
        python -c 'import monai; print(monai.__file__)'
        python -m pip uninstall -y monai
        rm monai*.whl

        # install from tar.gz
        python -m pip install monai*.tar.gz
        python -c 'import monai; monai.config.print_config()' 2>&1 | grep -iv "unknown"
        python -c 'import monai; print(monai.__file__)'
        python -m pip uninstall -y monai
        rm monai*.tar.gz

        # clean up
        cd "$root_dir"
        rm -r "$tmp_dir"

  build-docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r docs/requirements.txt
    - name: Make html
      run: |
        cd docs/
        make html
